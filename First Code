import UIKit

// Define the data model for Bookmark
struct PageData: Decodable {
    struct Bookmark: Decodable {
        let requestURL: String
    }
    
    let bookmarks: [Bookmark]
}

class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {

    let tableView = UITableView()
    var items: [String] = []

    override func viewDidLoad() {
        super.viewDidLoad()
        newDataBuild()
    }
    
    func newDataBuild() {
        // Assuming loadObject?.pageJSON contains JSON data in a valid format
        if let data = try? JSONSerialization.data(withJSONObject: loadObject?.pageJSON ?? [:], options: []),
           let pageData = try? JSONDecoder().decode(PageData.self, from: data) {
            
            // Extract requestURL from bookmarks
            items = pageData.bookmarks.map { $0.requestURL }
        }
        
        // Set the delegate and data source for the table view
        tableView.delegate = self
        tableView.dataSource = self

        // Register the cell and add table view to the view
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: "cell")
        view.addSubview(tableView)
        
        // Set constraints for table view
        tableView.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.topAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor)
        ])
        
        // Reload table view to display data
        tableView.reloadData()
    }

    // UITableViewDataSource methods
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return items.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        cell.textLabel?.text = items[indexPath.row]  // Set requestURL in table view
        return cell
    }
    
    // UITableViewDelegate method
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        print("Selected URL: \(items[indexPath.row])")
    }
}
