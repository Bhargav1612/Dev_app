import UIKit

class ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate {

    @IBOutlet weak var searchTextField: UITextField!
    @IBOutlet weak var recentSearchesTableView: UITableView!
    
    var recentSearches: [String] = []
    let searchesKey = "recentSearches"

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        setupTableView()
        loadRecentSearches()
        searchTextField.delegate = self
    }
    
    func setupTableView() {
        recentSearchesTableView.delegate = self
        recentSearchesTableView.dataSource = self
        recentSearchesTableView.tableFooterView = UIView() // Remove empty cell separators
    }
    
    func loadRecentSearches() {
        if let searches = UserDefaults.standard.array(forKey: searchesKey) as? [String] {
            recentSearches = searches
        }
    }
    
    func saveRecentSearches() {
        UserDefaults.standard.set(recentSearches, forKey: searchesKey)
    }
    
    @IBAction func searchTextFieldEditingDidEnd(_ sender: UITextField) {
        guard let searchText = sender.text, !searchText.trimmingCharacters(in: .whitespaces).isEmpty else {
            return
        }
        
        // Add search text to recent searches
        recentSearches.insert(searchText, at: 0)
        
        // Optionally, limit the number of recent searches
        if recentSearches.count > 20 {
            recentSearches.removeLast()
        }
        
        // Save to UserDefaults
        saveRecentSearches()
        
        // Reload table view
        recentSearchesTableView.reloadData()
        
        // Clear text field
        sender.text = ""
    }
    
    // MARK: - UITableViewDataSource Methods
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
         return recentSearches.count
    }
      
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {  
        let cell = tableView.dequeueReusableCell(withIdentifier: "SearchCell", for: indexPath)
        cell.textLabel?.text = recentSearches[indexPath.row]
        return cell
    }
    
    // MARK: - UITableViewDelegate Methods
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        // Deselect row with animation
        tableView.deselectRow(at: indexPath, animated: true)
        
        // Optional: You can perform an action when a recent search is tapped
        // For example, populate the search field or perform a new search
        let selectedSearch = recentSearches[indexPath.row]
        searchTextField.text = selectedSearch
    }
}
