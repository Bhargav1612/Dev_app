open override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    if tableView == searchHistoryTableView {
        let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryCell") ?? UITableViewCell(style: .default, reuseIdentifier: "HistoryCell")
        
        // Retrieve the search history
        let searchHistory = loadSearchHistory()
        cell.textLabel?.text = searchHistory[indexPath.row]
        
        // Create the delete button (X)
        let deleteButton = UIButton(type: .system)
        deleteButton.setTitle("X", for: .normal)
        deleteButton.setTitleColor(.red, for: .normal)
        deleteButton.tag = indexPath.row
        deleteButton.addTarget(self, action: #selector(deleteSearchHistoryItem(_:)), for: .touchUpInside)
        
        // Add the delete button to the cell
        cell.accessoryView = deleteButton
        
        return cell
    } else if tableView == searchSuggestionsTableView {
        guard let moleculeInfo = searchMoleculesInfo?[indexPath.row],
              let cell = tableView.dequeueReusableCell(withIdentifier: moleculeInfo.identifier) else {
            return UITableViewCell()
        }
        // Molecule logic here...
        return cell
    }
    return UITableViewCell()
}



@objc func deleteSearchHistoryItem(_ sender: UIButton) {
    // Load current search history from UserDefaults
    var searchHistory = loadSearchHistory()
    
    // Remove the item at the button's tag (indexPath.row)
    let indexToRemove = sender.tag
    searchHistory.remove(at: indexToRemove)
    
    // Save the updated search history back to UserDefaults
    UserDefaults.standard.set(searchHistory, forKey: "searchHistory")
    
    // Reload the table view to reflect changes
    searchHistoryTableView.reloadData()
}
