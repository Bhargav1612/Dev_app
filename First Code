open override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

    if tableView == searchHistoryTableView {
        let cell = tableView.dequeueReusableCell(withIdentifier: "HistoryCell") ?? UITableViewCell(style: .default, reuseIdentifier: "HistoryCell")
        let searchHistory = loadSearchHistory()
        cell.textLabel?.text = searchHistory[indexPath.row]

        // Add "X" button to the right side of the cell
        let deleteButton = UIButton(type: .custom)
        deleteButton.setTitle("X", for: .normal)
        deleteButton.setTitleColor(.red, for: .normal)
        deleteButton.frame = CGRect(x: cell.frame.width - 50, y: 10, width: 40, height: 40)
        deleteButton.tag = indexPath.row // Set tag to identify the row for deletion
        deleteButton.addTarget(self, action: #selector(deleteSearchHistoryItem(_:)), for: .touchUpInside)
        
        cell.addSubview(deleteButton)
        return cell
    } else if tableView == searchSuggestionsTableView {
        // Existing code for suggestions
        guard let moleculeInfo = searchMoleculesInfo?[indexPath.row],
              let cell = tableView.dequeueReusableCell(withIdentifier: moleculeInfo.identifier) else { return UITableViewCell() }
        // Molecule Logic
        return cell
    }
    return UITableViewCell()
}


@objc func deleteSearchHistoryItem(_ sender: UIButton) {
    var searchHistory = loadSearchHistory()

    // Remove the selected history item
    let index = sender.tag
    searchHistory.remove(at: index)

    // Save updated history back to UserDefaults
    UserDefaults.standard.set(searchHistory, forKey: "searchHistory")
    
    // Reload the table view to reflect the changes
    searchHistoryTableView.reloadData()
}
